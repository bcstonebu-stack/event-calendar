services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: event-calendar-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-calendar_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-calendar_password}
      POSTGRES_DB: ${POSTGRES_DB:-event_calendar}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-calendar_user} -d ${POSTGRES_DB:-event_calendar}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: event-calendar-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-calendar_user}:${POSTGRES_PASSWORD:-calendar_password}@postgres:5432/${POSTGRES_DB:-event_calendar}
      PORT: ${PORT:-3001}
      NODE_ENV: ${NODE_ENV:-production}
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
    ports:
      - "${PORT:-3001}:${PORT:-3001}"
    command: sh -c "npx prisma migrate deploy && npm start"

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: event-calendar-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      VITE_API_URL: http://localhost:3001/api
    ports:
      - "80:80"

# Persistent data volume for PostgreSQL
volumes:
  postgres_data:
